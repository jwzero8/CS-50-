import csv
import sys
# I have made extensive reference from https://www.youtube.com/watch?v=ffvsE8kGlrY&t=1843s, without her clip I couldn't finish this.
# After line 22 I use the method from the above link.
def main():

    # TODO: Check for command-line usage
    if len(sys.argv) != 3:
        print("Argv[0] = dna.py. Argv[1]: CSV file. Argv[2]: text DNA file")
        sys.exit(1)
    # TODO: Read database file into a variable

    with open(sys.argv[1]) as csvfile:
        csv_file = csv.DictReader(csvfile)
        strs = csv_file.fieldnames[1:]

    # TODO: Read DNA sequence file into a variable
        dna = open(sys.argv[2], "r").read()
        dna_match = {}

    # TODO: Find longest match of each STR in DNA sequence
    # My thought: For each STR in the STRs array, calcu
        for str in strs:
            # Alternative approach
            # longest_match(dna, strs)
            # My thought: index is the "i" in the longest_match function
            index = 0
            longest_seq = 0
            current_seq = 0

            while index < len(dna):
                # My thought: This resembles the sequence[start:end] in the longest match function
                current_str = dna[index: index + len(str)]

                if current_str == str:
                    current_seq = current_seq + 1
                    index = index + len(str)
                else:
                    if longest_seq < current_seq:
                        longest_seq = current_seq

                    current_seq = 0
                    index = index + 1

            dna_match[str] = longest_seq

    # TODO: Check database for matching profiles
        for person in csv_file:
            name = person['name']
            found = True
            for str in strs:
                if int(person[str]) != dna_match[str]:
                    found = False
                    break
            if found == True:
                print(name)
                sys.exit()
        print("No match")

def longest_match(sequence, subsequence):
    """Returns length of longest run of subsequence in sequence."""

    # Initialize variables
    longest_run = 0
    subsequence_length = len(subsequence)
    sequence_length = len(sequence)

    # Check each character in sequence for most consecutive runs of subsequence
    for i in range(sequence_length):

        # Initialize count of consecutive runs
        count = 0

        # Check for a subsequence match in a "substring" (a subset of characters) within sequence
        # If a match, move substring to next potential match in sequence
        # Continue moving substring and checking for matches until out of consecutive matches
        while True:

            # Adjust substring start and end
            start = i + count * subsequence_length
            end = start + subsequence_length

            # If there is a match in the substring
            if sequence[start:end] == subsequence:
                count += 1

            # If there is no match in the substring
            else:
                break

        # Update most consecutive matches found
        longest_run = max(longest_run, count)

    # After checking for runs at each character in seqeuence, return longest run found
    return longest_run

main()
